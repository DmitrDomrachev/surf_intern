// Знает концепцию потоков и привел доводы, почему dart однопоточный.
// Объяснил разницу между асинхронностью и многопоточностью.
// Пояснил за изоляты, которые позволяют выполнять код параллельно.
// Знает, имеют ли два разных изолята общий участок памяти. Объяснил в чём преимущества этого подхода.
// Знает, что такое event loop, и объяснил как они соотносятся с изолятами.
// Объяснил разницу между работой с изолятами и Future.

// Потомки выполняются парралельрно, на разных ядрах, dart однопоточный, потому что web
// Асинхронность - переключение между задачами в одном потоке,
// многопоточность - парралельное выполнение на нескольких ядрах.
// С помощью isolate можно создать отдельный изолированый поток.
// Общей у isolate памяти нет, но могут обмениваться информацией через порты. Hет race condition, deadlock.
// Event loop - механизм последовательного выполнения задач, подеживуюший асинхронные задачи.
// У каждого isolate свой event loop.
// Future добавляет задачу в event loop текущего потока, изолят создает новый.
