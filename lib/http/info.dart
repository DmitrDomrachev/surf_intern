// Объяснил, что из себя представляет REST и для чего он нужен.
// Объяснил, чем он отличается от других архитектур.
// REST - это архитектурный стиль разработки программного
// обеспечения для взаимодействия компонентов распределенных систем
// Требования к REST системе:
//  1) Модель клиент-сервер
//  2) Отсутствие состояния (между запросами клиента никакая информация о состоянии клиента на сервере не хранится)
//  3) Кеширование (ответы сервера должны иметь явное или неявное обозначение, как кэшируемые или некэшируемые)
//  4) Единообразие интерфейса
//  5) Слои
//  6) Код по требованию (необязательное ограничение)